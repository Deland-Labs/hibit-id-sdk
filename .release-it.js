/**
 * Release-it configuration wrapper that loads the TypeScript config
 * This file exists because release-it doesn't natively support TypeScript configs
 */

// Since release-it doesn't support TypeScript configs directly,
// we inline the configuration here while maintaining the TypeScript version
// for development and documentation purposes.

const config = {
  git: {
    commitMessage: 'chore: release v${version}',
    tagName: 'v${version}',
    requireBranch: 'main',
    requireCleanWorkingDir: true,
    pushRepo: 'origin'
  },
  github: {
    release: true,
    releaseName: 'Hibit ID SDK v${version}',
    releaseNotes: null // Generated by conventional-changelog
  },
  npm: {
    publish: false // Handled by workspaces plugin
  },
  hooks: {
    'before:init': [
      'echo "🧪 Running tests before release..."',
      'pnpm test:all',
      'echo "🏗️  Building all packages..."',
      'pnpm build:all'
    ],
    'after:bump': ['echo "📦 Updated to version ${version}"'],
    'after:release': [
      'echo "🎉 Successfully released Hibit ID SDK v${version}!"',
      'echo "📝 View the release: ${repo.repository}/releases/tag/v${version}"'
    ]
  },
  plugins: {
    '@release-it/conventional-changelog': {
      preset: 'angular',
      infile: 'CHANGELOG.md',
      header:
        '# Changelog\n\nAll notable changes to Hibit ID SDK will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n',
      strictSemVer: true,
      writerOpts: {
        commitsSort: ['subject', 'type'],
        mainTemplate: `{{> header}}

{{#each groupBy}}
{{#if title}}
## {{title}}

{{#each commits}}
{{> commit root=@root}}
{{/each}}
{{/if}}
{{/each}}

{{> footer}}
`,
        commitPartial: `* {{#if scope}}**{{scope}}:** {{/if}}{{subject}}{{#if hash}} ([{{hash}}]({{repository.url}}/commit/{{hash}})){{/if}}`
      }
    },
    '@release-it-plugins/workspaces': {
      publish: true,
      skipChecks: false,
      additionalManifests: {
        dependencyUpdates: true
      }
    }
  }
};

export default config;
